
# Configuration for telegraf agent
[agent]
  # Default data collection interval for all inputs
  interval = "10s"


# Read metrics about cpu usage
[[inputs.cpu]]
  # Whether to report per-cpu stats or not
  percpu = true
  # Whether to report total system cpu stats or not
  totalcpu = true
  # Comment this line if you want the raw CPU time metrics
  drop = ["time_*"]

# Read metrics about disk usage by mount point
# [[inputs.disk]]
  # By default, telegraf gather stats for all mountpoints.
  # Setting mountpoints will restrict the stats to the specified mountpoints.
  # mount_points = ["/"]

# Read metrics about disk IO by device
[[inputs.diskio]]
  # By default, telegraf will gather stats for all devices including
  # disk partitions.
  # Setting devices will restrict the stats to the specified devices.
  devices = ["sda",]
  # Uncomment the following line if you do not need disk serial numbers.
  # skip_serial_number = true



# Read metrics about memory usage
[[inputs.mem]]
  # no configuration



# Read metrics about network interface usage
# [[inputs.net]]
  # By default, telegraf gathers stats from any up interface (excluding loopback)
  # Setting interfaces will tell it to gather these explicit interfaces,
  # regardless of status.
  #
  # interfaces = ["eth0", ... ]



# Ping given url(s) and return statistics
[[inputs.ping]]
  # urls to ping
  urls = ["www.google.com", "www.amon.cx", "www.yahoo.com"] # required
  # number of pings to send (ping -c <COUNT>)
  count = 1 # required
  # interval, in s, at which to ping. 0 == default (ping -i <PING_INTERVAL>)
  ping_interval = 0.0
  # ping timeout, in s. 0 == no timeout (ping -t <TIMEOUT>)
  timeout = 0.0
  # interface to send ping from (ping -I <INTERFACE>)
  interface = ""


# Read metrics about swap memory usage
# [[inputs.swap]]
  # no configuration

# Read metrics about system load & uptime
[[inputs.system]]
  # no configuration


[[outputs.amon]]
# Amon Server Key
server_key = "my-server-key" # required.
# Amon Instance URL
amon_instance = "https://youramoninstance" # required
# Connection timeout.
# timeout = "5s"
